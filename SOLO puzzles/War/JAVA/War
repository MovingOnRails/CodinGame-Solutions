import java.util.*;
import java.io.*;
import java.math.*;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class Solution {

    public static int debuglowerRounds = 10;
    public static int debughigherRounds = 20;

    public static boolean firstCardBeatsSecond(String card1, String card2,int numberOfRounds){
        char value1 = card1.charAt(0);
        char value2 = card2.charAt(0);
        boolean res = false;
        if(value1 != value2){
            if( !Character.isDigit(value1) && Character.isDigit(value2)){
                res = true;
            } else if (Character.isDigit(value1) && !Character.isDigit(value2)){
                res = false;
            } else if(!Character.isDigit(value1) && !Character.isDigit(value2)){
                if(value1 == 'A'){
                    res = true;
                }else if(value2 == 'A'){
                    res = false;
                }else if(value1 == 'K'){
                    res = true;
                }else if(value2 == 'K'){
                    res = false;
                }else if(value1 == 'Q'){
                    res = true;
                }else if(value2 == 'Q'){
                    res = false;
                }
            } else if(Character.isDigit(value1) && Character.isDigit(value2)){
                res = Character.getNumericValue(value1) > Character.getNumericValue(value2);
            }
        }
        
        if(10 <= numberOfRounds && numberOfRounds <= 20)
        System.err.println("value1; "+value1);
        System.err.println("value2; "+value2);
        System.err.println("res; "+res);
        return res;
    }

    public static void printHand(List<String> hand){
        for(String card : hand){
            System.err.print(card+" ");
        }
        System.err.print("\n");
    }

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt(); // the number of cards for player 1
        List<String> handPlayer1 = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            String cardp1 = in.next(); // the n cards of player 1
            handPlayer1.add(cardp1);
        }
        printHand(handPlayer1);
        List<String> handPlayer2 = new ArrayList<>();
        int m = in.nextInt(); // the number of cards for player 2
        for (int i = 0; i < m; i++) {
            String cardp2 = in.next(); // the m cards of player 2
            handPlayer2.add(cardp2);
        }
        printHand(handPlayer2);
        System.err.print("\n");

        int numberOfRounds = 0;
        boolean isWar = false;
        String res;
        List<String> cardsAtWarPlayer1 = new ArrayList<>();
        List<String> cardsAtWarPlayer2 = new ArrayList<>();
        while(true){
            System.err.println("--------Round: "+numberOfRounds+"--------");
            System.err.println("isWar: "+isWar);
            if(10 <= numberOfRounds && numberOfRounds <= 20){
            printHand(handPlayer1);
            printHand(handPlayer2);
            }
            if(!isWar){
                numberOfRounds++;
            } else {
                for(int i =0;i<2;i++){
                    String cardPlayer1 = handPlayer1.get(0);
                    handPlayer1.remove(0);
                    cardsAtWarPlayer1.add(cardPlayer1);
                    String cardPlayer2 = handPlayer2.get(0);
                    handPlayer2.remove(0);
                    cardsAtWarPlayer2.add(cardPlayer1);
                }
            }
            isWar = false;
            String currentCardPlayer1 = handPlayer1.get(0);
            handPlayer1.remove(0);
            String currentCardPlayer2 = handPlayer2.get(0);
            handPlayer2.remove(0);
            if(firstCardBeatsSecond(currentCardPlayer1, currentCardPlayer2, numberOfRounds)){
                // TODO system.err print numberOfRounds
                handPlayer1.add(currentCardPlayer1);
                handPlayer1.add(currentCardPlayer2);
                // TODO If we're at war, add the cards at war to player 1
            } else if(firstCardBeatsSecond(currentCardPlayer2, currentCardPlayer1, numberOfRounds)) {
                handPlayer2.add(currentCardPlayer1);
                handPlayer2.add(currentCardPlayer2);
                // TODO If we're at war, add the cards at war to player 2
            } else { // Draw
                isWar = true;
                cardsAtWarPlayer1.add(currentCardPlayer1);
                cardsAtWarPlayer2.add(currentCardPlayer2);
            }
            if(handPlayer1.isEmpty()){
                res = "2 "+numberOfRounds;
                break;
            } else if(handPlayer2.isEmpty()){
                res = "1 "+numberOfRounds;
                break;
            }

        }

        // Write an answer using System.out.println()
        // To debug: System.err.println("Debug messages...");

        System.out.println(res);
    }
}
